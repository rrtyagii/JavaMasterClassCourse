package dontThinkTooMuch;

import java.util.Collection;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;

public class Locations implements Map<Integer, Anything> {
	
  private static Map<Integer, Anything> locations=new HashMap<Integer, Anything>();
	
		@Override
		public int size() {
			// TODO Auto-generated method stub
			return locations.size();
		}
		
		@Override
		public boolean isEmpty() {
			// TODO Auto-generated method stub
			return locations.isEmpty();
		}
		
		@Override
		public boolean containsKey(Object key) {
			// TODO Auto-generated method stub
			return locations.containsKey(key); 
		}
		
		@Override
		public boolean containsValue(Object value) {
			// TODO Auto-generated method stub
			return locations.containsValue(value);
		}
		
		@Override
		public Anything get(Object key) {
			// TODO Auto-generated method stub
			return locations.get(key);
		}
		
		@Override
		public Anything put(Integer key, Anything value) {
			// TODO Auto-generated method stub
			return locations.put(key, value);
		}
		
		@Override
		public Anything remove(Object key) {
			// TODO Auto-generated method stub
			return locations.remove(key);
		}
		
		@Override
		public void putAll(Map<? extends Integer, ? extends Anything> m) {
			// TODO Auto-generated method stub
		}
		
		@Override
		public void clear() {
			// TODO Auto-generated method stub
			locations.clear();
		}
		
		@Override
		public Set<Integer> keySet() {
			// TODO Auto-generated method stub
			return locations.keySet();
		}
		
		@Override
		public Collection<Anything> values() {
			// TODO Auto-generated method stub
			return locations.values();
		}
		
		@Override
		public Set<Entry<Integer, Anything>> entrySet() {
			// TODO Auto-generated method stub
			return locations.entrySet();
		}   

}
